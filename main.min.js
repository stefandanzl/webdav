var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __commonJS=(cb,mod)=>function __require(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:true}),mod);var require_entities=__commonJS({"node_modules/xmldom/lib/entities.js"(exports){exports.entityMap={lt:"<",gt:">",amp:"&",quot:'"',apos:"'",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",times:"×",divide:"÷",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",fnof:"ƒ",circ:"ˆ",tilde:"˜",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",bull:"•",hellip:"…",permil:"‰",prime:"′",Prime:"″",lsaquo:"‹",rsaquo:"›",oline:"‾",euro:"€",trade:"™",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦"}}});var require_sax=__commonJS({"node_modules/xmldom/lib/sax.js"(exports){var nameStartChar=/[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;var nameChar=new RegExp("[\\-\\.0-9"+nameStartChar.source.slice(1,-1)+"\\u00B7\\u0300-\\u036F\\u203F-\\u2040]");var tagNamePattern=new RegExp("^"+nameStartChar.source+nameChar.source+"*(?::"+nameStartChar.source+nameChar.source+"*)?$");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function ParseError(message,locator){this.message=message;this.locator=locator;if(Error.captureStackTrace)Error.captureStackTrace(this,ParseError)}ParseError.prototype=new Error;ParseError.prototype.name=ParseError.name;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a2){var k=a2.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)==="#"){return fixedFromCharCode(parseInt(k.substr(1).replace("x","0x")))}else{errorHandler.error("entity not found:"+a2);return a2}}function appendText(end2){if(end2>start){var xt=source.substring(start,end2).replace(/&#?\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end2-start);start=end2}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\r\n?|\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf("<",start);if(tagStart<0){if(!source.substr(start).match(/^\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case"/":var end=source.indexOf(">",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\s<].*/,"");errorHandler.error("end tag name: "+tagName+" is not complete:"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\s</)){tagName=tagName.replace(/[\s<].*/,"");errorHandler.error("end tag name: "+tagName+" maybe not complete");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError("end tag name: "+tagName+" is not match the current start tagName:"+config.tagName)}}else{parseStack.push(config)}end++;break;case"?":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case"!":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning("unclosed xml attribute")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri==="http://www.w3.org/1999/xhtml"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){if(e instanceof ParseError){throw e}errorHandler.error("element parse error: "+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){function addAttribute(qname,value2,startIndex){if(qname in el.attributeNames)errorHandler.fatalError("Attribute "+qname+" redefined");el.addValue(qname,value2,startIndex)}var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case"=":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error("attribute equal must after attrName")}break;case"'":case'"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after "="');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);addAttribute(attrName,value,start-1);s=S_ATTR_END}else{throw new Error("attribute value no end '"+c+"' match")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);addAttribute(attrName,value,start);errorHandler.warning('attribute "'+attrName+'" missed start quot('+c+")!!");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after "="')}break;case"/":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error("attribute invalid close char('/')")}break;case"":errorHandler.error("unexpected end of input");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case">":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)==="/"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute "'+value+'" missed quot(")!');addAttribute(attrName,value.replace(/&#?\w+;/g,entityReplacer),start)}else{if(currentNSMap[""]!=="http://www.w3.org/1999/xhtml"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute "'+value+'" missed value!! "'+value+'" instead!!')}addAttribute(value,value,start)}break;case S_EQ:throw new Error("attribute value missed!!")}return p;case"":c=" ";default:if(c<=" "){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);errorHandler.warning('attribute "'+value+'" missed quot(")!!');addAttribute(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[""]!=="http://www.w3.org/1999/xhtml"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute "'+attrName+'" missed value!! "'+attrName+'" instead2!!')}addAttribute(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required"'+attrName+'"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error("elements closed character '/' and '>' must be connected to")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(":");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix==="xmlns"&&localName}else{localName=qName;prefix=null;nsPrefix=qName==="xmlns"&&""}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri="http://www.w3.org/2000/xmlns/";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix==="xml"){a.uri="http://www.w3.org/XML/1998/namespace"}if(prefix!=="xmlns"){a.uri=currentNSMap[prefix||""]}}}var nsp=tagName.indexOf(":");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||""];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf("</"+tagName+">",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf("</"+tagName+">");if(pos<elStartEnd){pos=source.lastIndexOf("</"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case"-":if(source.charAt(start+3)==="-"){var end=source.indexOf("--\x3e",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error("Unclosed comment");return-1}}else{return-1}default:if(source.substr(start+3,6)=="CDATA["){var end=source.indexOf("]]>",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=false;var sysid=false;if(len>3){if(/^public$/i.test(matchs[2][0])){pubid=matchs[3][0];sysid=len>4&&matchs[4][0]}else if(/^system$/i.test(matchs[2][0])){sysid=matchs[3][0]}}var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid,sysid);domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf("?>",start);if(end){var match=source.substring(start,end).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(){this.attributeNames={}}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error("invalid tagName:"+tagName)}this.tagName=tagName},addValue:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error("invalid attribute:"+qName)}this.attributeNames[qName]=this.length;this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function split(source,start){var match;var buf=[];var reg=/'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader;exports.ParseError=ParseError}});var require_dom=__commonJS({"node_modules/xmldom/lib/dom.js"(exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(!(pt instanceof Super)){let t2=function(){};var t=t2;t2.prototype=Super.prototype;t2=new t2;copy(pt,t2);Class.prototype=pt=t2}if(pt.constructor!=Class){if(typeof Class!="function"){console.error("unknow Class:"+Class)}pt.constructor=Class}}var htmlns="http://www.w3.org/1999/xhtml";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]="Index size error",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]="DOMString size error",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]="Hierarchy request error",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]="Wrong document",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]="Invalid character",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]="No data allowed",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]="No modification allowed",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]="Not found",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]="Not supported",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]="Attribute in use",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]="Invalid state",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]="Syntax error",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]="Invalid modification",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]="Invalid namespace",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]="Invalid access",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+": "+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join("")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,"length",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+"@"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c=="<"&&"&lt;"||c==">"&&"&gt;"||c=="&"&&"&amp;"||c=='"'&&"&quot;"||"&#"+c.charCodeAt()+";"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns=="http://www.w3.org/2000/xmlns/"){el._nsMap[newAttr.prefix?newAttr.localName:""]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns=="http://www.w3.org/2000/xmlns/"){delete el._nsMap[newAttr.prefix?newAttr.localName:""]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:"#document",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,(function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute("id")==id){rtv=node;return true}}}));return rtv},getElementsByClassName:function(className){var pattern=new RegExp("(^|\\s)"+className+"(\\s|$)");return new LiveNodeList(this,(function(base){var ls=[];_visitNode(base.documentElement,(function(node){if(node!==base&&node.nodeType==ELEMENT_NODE){if(pattern.test(node.getAttribute("class"))){ls.push(node)}}}));return ls}))},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(":");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(":");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||""},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=""+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||""},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=""+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,(function(base){var ls=[];_visitNode(base,(function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName==="*"||node.tagName==tagName)){ls.push(node)}}));return ls}))},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,(function(base){var ls=[];_visitNode(base,(function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI==="*"||node.namespaceURI===namespaceURI)&&(localName==="*"||node.localName==localName)){ls.push(node)}}));return ls}))}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:"",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,"")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:"#text",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:"#comment",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:"#cdata-section",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName="#document-fragment";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9&&this.documentElement||this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join("")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||"";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix==="xml"&&uri==="http://www.w3.org/XML/1998/namespace"||uri=="http://www.w3.org/2000/xmlns/"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node=="string"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push("<",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix=="xmlns"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName=="xmlns"){visibleNamespaces.push({prefix:"",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||"";var uri=attr.namespaceURI;var ns=prefix?" xmlns:"+prefix:" xmlns";buf.push(ns,'="',uri,'"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||"";var uri=node.namespaceURI;if(uri){var ns=prefix?" xmlns:"+prefix:" xmlns";buf.push(ns,'="',uri,'"');visibleNamespaces.push({prefix:prefix,namespace:uri})}}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(">");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push("</",nodeName,">")}else{buf.push("/>")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(" ",node.name,'="',node.value.replace(/[<&"]/g,_xmlEncoder),'"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder).replace(/]]>/g,"]]&gt;"));case CDATA_SECTION_NODE:return buf.push("<![CDATA[",node.data,"]]>");case COMMENT_NODE:return buf.push("\x3c!--",node.data,"--\x3e");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push("<!DOCTYPE ",node.name);if(pubid){buf.push(" PUBLIC ",pubid);if(sysid&&sysid!="."){buf.push(" ",sysid)}buf.push(">")}else if(sysid&&sysid!="."){buf.push(" SYSTEM ",sysid,">")}else{var sub=node.internalSubset;if(sub){buf.push(" [",sub,"]")}buf.push(">")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push("<?",node.target," ",node.data,"?>");case ENTITY_REFERENCE_NODE:return buf.push("&",node.nodeName,";");default:buf.push("??",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!="object"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){let getTextContent2=function(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent2(node))}node=node.nextSibling}return buf.join("");default:return node.nodeValue}};getTextContent=getTextContent2;Object.defineProperty(LiveNodeList.prototype,"length",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,"textContent",{get:function(){return getTextContent2(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});__set__=function(object,key,value){object["$$"+key]=value}}}catch(e){}var getTextContent;exports.Node=Node;exports.DOMException=DOMException;exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer}});var require_dom_parser=__commonJS({"node_modules/xmldom/lib/dom-parser.js"(exports){function DOMParser2(options){this.options=options||{locator:{}}}DOMParser2.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax2=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var isHTML=/\/x?html?$/.test(mimeType);var entityMap=isHTML?htmlEntity.entityMap:{lt:"<",gt:">",amp:"&",quot:'"',apos:"'"};if(locator){domBuilder.setDocumentLocator(locator)}sax2.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax2.domBuilder=options.domBuilder||domBuilder;if(isHTML){defaultNSMap[""]="http://www.w3.org/1999/xhtml"}defaultNSMap.xml=defaultNSMap.xml||"http://www.w3.org/XML/1998/namespace";if(source&&typeof source==="string"){sax2.parse(source,defaultNSMap,entityMap)}else{sax2.errorHandler.error("invalid doc source")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn("[xmldom "+key+"]\t"+msg+_locator(locator))}||function(){}}build("warning");build("error");build("fatalError");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn("[xmldom warning]\t"+error,_locator(this.locator))},error:function(error){console.error("[xmldom error]\t"+error,_locator(this.locator))},fatalError:function(error){throw new ParseError(error,this.locator)}};function _locator(l){if(l){return"\n@"+(l.systemId||"")+"#[line:"+l.lineNumber+",col:"+l.columnNumber+"]"}}function _toString(chars,start,length){if(typeof chars=="string"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+""}return chars}}"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,(function(key){DOMHandler.prototype[key]=function(){return null}}));function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var htmlEntity=require_entities();var sax=require_sax();var XMLReader=sax.XMLReader;var ParseError=sax.ParseError;var DOMImplementation=exports.DOMImplementation=require_dom().DOMImplementation;exports.XMLSerializer=require_dom().XMLSerializer;exports.DOMParser=DOMParser2;exports.__DOMHandler=DOMHandler}});var main_exports={};__export(main_exports,{default:()=>Cloudr});module.exports=__toCommonJS(main_exports);var import_obsidian7=require("obsidian");var import_obsidian=require("obsidian");var DEFAULT_SETTINGS={url:"",username:"",password:"",webdavPath:"",overrideVault:"",exclusions:{directories:["node_modules",".git","webdav"],extensions:[".exe"],markers:["prevdata.json",".obsidian/workspace.json"]},exclusionsOverride:false,liveSync:false,autoSync:false,autoSyncInterval:30,enableRibbons:true,skipHiddenMobile:false,skipHiddenDesktop:false};var FileTreeModal=class extends import_obsidian.Modal{constructor(app,plugin){super(app);this.plugin=plugin}onOpen(){const{titleEl:titleEl,modalEl:modalEl,contentEl:contentEl,containerEl:containerEl}=this;modalEl.style.overflowY="hidden";modalEl.style.width="100%";modalEl.style.height="100%";titleEl.setText("Webdav Control Panel");const mainDiv=contentEl.createEl("div");mainDiv.style.display="flex";mainDiv.style.flexDirection="row";mainDiv.style.justifyContent="space-between";mainDiv.style.gap="40px";mainDiv.style.margin="5px";const buttonDiv=mainDiv.createEl("div");buttonDiv.style.display="flex";buttonDiv.style.flexDirection="column";buttonDiv.style.gap="20px";buttonDiv.style.position="fixed";mainDiv.style.minHeight=`330px`;const checkButton=buttonDiv.createEl("button",{text:"CHECK",cls:"mod-cta"});checkButton.addEventListener("click",(()=>{this.plugin.operations.check().then((()=>{this.fileTreeDiv.setText(JSON.stringify(this.plugin.fileTrees,null,2))}))}));const pauseButton=buttonDiv.createEl("button",{text:"PAUSE",cls:"mod-cta"});pauseButton.addEventListener("click",(()=>{this.plugin.show("Toggling Pause");this.plugin.togglePause()}));const errorButton=buttonDiv.createEl("button",{text:"ERROR",cls:"mod-cta",title:"Clear the error status in your previous data storage",attr:{backgroundColor:"red"}});errorButton.addEventListener("click",(()=>{this.plugin.show("Resetting Error status");this.plugin.prevData.error=false;this.plugin.setStatus("✔️")}));const saveButton=buttonDiv.createEl("button",{text:"SAVE",cls:"mod-cta"});saveButton.addEventListener("click",(()=>{this.plugin.show("Saving current vault file state for future synchronisation actions");this.plugin.saveState()}));const pullButton=buttonDiv.createEl("button",{text:"PULL",cls:"mod-cta"});pullButton.addEventListener("click",(()=>{this.plugin.operations.sync({local:{},webdav:{added:1,deleted:1,modified:1,except:1}}).then((()=>{this.fileTreeDiv.setText(JSON.stringify(this.plugin.fileTrees,null,2))}))}));const syncButton=buttonDiv.createEl("button",{text:"SYNC",cls:"mod-cta"});syncButton.addEventListener("click",(()=>{this.plugin.operations.sync({local:{added:1,deleted:1,modified:1},webdav:{added:1,deleted:1,modified:1}}).then((()=>{this.fileTreeDiv.setText(JSON.stringify(this.plugin.fileTrees,null,2))}))}));const pushButton=buttonDiv.createEl("button",{text:"PUSH",cls:"mod-cta"});pushButton.addEventListener("click",(()=>{this.plugin.operations.sync({local:{added:1,deleted:1,modified:1,except:1},webdav:{}}).then((()=>{this.fileTreeDiv.setText(JSON.stringify(this.plugin.fileTrees,null,2))}))}));const pullInvertButton=buttonDiv.createEl("button",{text:"!PULL",cls:"mod-cta"});pullInvertButton.addEventListener("click",(()=>{this.plugin.show("Inverted Pulling files from server ...");this.plugin.operations.sync({local:{},webdav:{added:-1,deleted:-1,modified:-1,except:-1}}).then((()=>{this.fileTreeDiv.setText(JSON.stringify(this.plugin.fileTrees,null,2))}))}));const pushInvertButton=buttonDiv.createEl("button",{text:"!PUSH",cls:"mod-cta"});pushInvertButton.addEventListener("click",(()=>{this.plugin.show("Inverted Pushing files to server ...");this.plugin.operations.sync({local:{added:-1,deleted:-1,modified:-1,except:-1},webdav:{}}).then((()=>{this.fileTreeDiv.setText(JSON.stringify(this.plugin.fileTrees,null,2))}))}));const containDiv=mainDiv.createEl("div");containDiv.style.overflow="auto";containDiv.style.height="100%";this.fileTreeDiv=containDiv.createEl("div");this.fileTreeDiv.style.whiteSpace="pre";this.fileTreeDiv.style.minHeight="70vh";this.fileTreeDiv.style.marginLeft=`80px`;this.fileTreeDiv.style.overflow="auto";this.fileTreeDiv.style.userSelect="text";this.fileTreeDiv.style.height="100px";this.fileTreeDiv.style.paddingBottom="10px";if(this.plugin.fileTrees){this.fileTreeDiv.setText(JSON.stringify(this.plugin.fileTrees,null,4))}else{this.fileTreeDiv.setText("Press CHECK button for data to be shown")}}onClose(){const{contentEl:contentEl}=this;contentEl.empty();this.plugin.modal}};var join=(...args)=>{const separator="/";return args.join(separator).replace(/\/\//g,"/")};var extname=filePath=>{if(filePath.charAt(filePath.length-1)==="/"){return""}const fileName=filePath.split("/").pop();if(!fileName){return""}const lastDotIndex=fileName.lastIndexOf(".");if(lastDotIndex<=0){return""}const extension=fileName.slice(lastDotIndex);return extension};var dirname=filePath=>{const separator="/";const lastSeparatorIndex=filePath.lastIndexOf(separator);if(lastSeparatorIndex===-1){return""}return filePath.substring(0,lastSeparatorIndex)};async function sha1(buffer){const hashBuffer=await crypto.subtle.digest("SHA-1",buffer);const hashArray=Array.from(new Uint8Array(hashBuffer));const hashHex=hashArray.map((b=>b.toString(16).padStart(2,"0"))).join("");return hashHex}function log(...text){const doLog=false;if(doLog){console.log(...text)}}function fileTreesEmpty({localFiles:localFiles,webdavFiles:webdavFiles}){const hasNoRegularChanges=[localFiles.added,localFiles.deleted,localFiles.modified,webdavFiles.added,webdavFiles.deleted,webdavFiles.modified].every((record=>Object.keys(record).length===0));if(!hasNoRegularChanges){return false}const hasNoExceptions=[webdavFiles.except,localFiles.except].every((record=>Object.keys(record).length===0));if(hasNoExceptions){return true}return true}var import_obsidian2=require("obsidian");var CloudrSettingsTab=class extends import_obsidian2.PluginSettingTab{constructor(app,plugin){super(app,plugin);this.plugin=plugin}display(){const{containerEl:containerEl}=this;containerEl.empty();new import_obsidian2.Setting(containerEl).setName("Webdav URL").setDesc("Enter your Server's URL").addText((text=>text.setPlaceholder("https://yourserver.tld/webdav").setValue(this.plugin.settings.url).onChange((async value=>{this.plugin.settings.url=value;this.plugin.setClient();await this.plugin.saveSettings()}))));new import_obsidian2.Setting(containerEl).setName("Webdav Username").setDesc("Enter your Server's Username").addText((text=>text.setPlaceholder("admin").setValue(this.plugin.settings.username).onChange((async value=>{this.plugin.settings.username=value;this.plugin.setClient();await this.plugin.saveSettings()}))));new import_obsidian2.Setting(containerEl).setName("Webdav Password").setDesc("Enter your Server's Password").addText((text=>text.setPlaceholder("passw0rd").setValue(this.plugin.settings.password).onChange((async value=>{this.plugin.settings.password=value;this.plugin.setClient();await this.plugin.saveSettings()}))));new import_obsidian2.Setting(containerEl).setName("Apply and Test Server Config").setDesc("Click Button to test Server's connection").addButton((button=>button.onClick((async()=>{this.plugin.setClient().then((async()=>{button.setButtonText(await this.plugin.operations.test(true)?"OK":"FAIL")}))})).setButtonText(this.plugin.prevData.error?"FAIL":"OK")));new import_obsidian2.Setting(containerEl).setName("Webdav Base Directory").setDesc("Enter your Server's Base Directory - your Vault will be created inside of it").addText((text=>text.setPlaceholder("/").setValue(this.plugin.settings.webdavPath).onChange((async value=>{this.plugin.settings.webdavPath=value.replace(/\\/g,"/");await this.plugin.saveSettings();await this.plugin.setBaseWebdav();this.plugin.operations.test()}))));new import_obsidian2.Setting(containerEl).setName("Override remote Vault Name").setDesc("Use only if the remote Vault's name differs from this").addText((text=>text.setPlaceholder("vaultname").setValue(this.plugin.settings.overrideVault).onChange((async value=>{this.plugin.settings.overrideVault=value.replace(/\\/g,"/");await this.plugin.saveSettings();await this.plugin.setBaseWebdav()}))));new import_obsidian2.Setting(containerEl).setName("Excluded Directories").setDesc("Enter single folder names in separate lines").addTextArea((text=>text.setPlaceholder("My Files\nalbum\nDocuments").setValue(this.plugin.settings.exclusions.directories.join("\n")).onChange((async value=>{value=value.replace(/\r/g,"").replace(/\\/g,"/");this.plugin.settings.exclusions.directories=value.split("\n");log(JSON.stringify(this.plugin.settings.exclusions));await this.plugin.saveSettings()}))));new import_obsidian2.Setting(containerEl).setName("Excluded file extensions").setDesc("Enter extensions separated with commas (,)").addText((text=>text.setPlaceholder(".json, .exe, .zip").setValue(this.plugin.settings.exclusions.extensions.join(", ")).onChange((async value=>{value=value.replace(/ /g,"");this.plugin.settings.exclusions.extensions=value.split(",");await this.plugin.saveSettings()}))));new import_obsidian2.Setting(containerEl).setName("Excluded filename markers").setDesc("Enter markers in separate lines").addTextArea((text=>text.setPlaceholder("_secret_\n°cache~\n_archive_\nfolder1/folder2").setValue(this.plugin.settings.exclusions.markers.join("\n")).onChange((async value=>{value=value.replace(/\r/g,"").replace(/\\/g,"/");this.plugin.settings.exclusions.markers=value.split("\n");await this.plugin.saveSettings()}))));new import_obsidian2.Setting(containerEl).setName("Mod Sync").setDesc("Enable Synchronization on modification").addToggle((toggle=>toggle.setValue(this.plugin.settings.liveSync).onChange((async value=>{this.plugin.settings.liveSync=value;this.plugin.setLiveSync();await this.plugin.saveSettings()}))));new import_obsidian2.Setting(containerEl).setName("Auto Interval Sync").setDesc("Enable automatic syncing in intervals\nThis will override Mod Sync").addToggle((toggle=>toggle.setValue(this.plugin.settings.autoSync).onChange((async value=>{this.plugin.settings.autoSync=value;this.plugin.setAutoSync();await this.plugin.saveSettings()}))));new import_obsidian2.Setting(containerEl).setName("Auto Interval Sync periodic interval in seconds").setDesc("Enter the desired interval in seconds").addText((text=>text.setPlaceholder("10").setValue(this.plugin.settings.autoSyncInterval.toString()).onChange((async value=>{const parseVal=parseInt(value,10);if(isNaN(parseVal)){console.error("Failed to parse the string as a number.");this.plugin.show("Invalid number entered")}else{this.plugin.settings.autoSyncInterval=parseVal;this.plugin.setAutoSync();await this.plugin.saveSettings()}}))));new import_obsidian2.Setting(containerEl).setName("Enable Ribbons").setDesc("Enable PULL Action on Obsidian Start - Reload App for changes to take effect").addToggle((toggle=>toggle.setValue(this.plugin.settings.enableRibbons).onChange((async value=>{this.plugin.settings.enableRibbons=value;await this.plugin.saveSettings()}))));new import_obsidian2.Setting(containerEl).setName("Override disable ignore").setDesc("Enable this setting to sync ALL files, even excluded ones - useful for initial PULL or to replicate local state on other devices with PUSH").addToggle((toggle=>toggle.setValue(this.plugin.settings.exclusionsOverride).onChange((async value=>{this.plugin.settings.exclusionsOverride=value}))));new import_obsidian2.Setting(containerEl).setName("Skip .obsidian sync on mobile").setDesc("Recommended especially for mobile usage for faster file checking").addToggle((toggle=>toggle.setValue(this.plugin.settings.skipHiddenMobile).onChange((async value=>{this.plugin.settings.skipHiddenDesktop=value;await this.plugin.saveSettings()}))));new import_obsidian2.Setting(containerEl).setName("Skip .obsidian sync on desktop").setDesc("Will only apply to desktop version").addToggle((toggle=>toggle.setValue(this.plugin.settings.skipHiddenDesktop).onChange((async value=>{this.plugin.settings.skipHiddenDesktop=value;await this.plugin.saveSettings()}))))}};var Compare=class{constructor(plugin){this.plugin=plugin;this.checkExistKey=(sourceObject,referenceObject)=>Object.fromEntries(Object.entries(sourceObject).filter((([key])=>key in referenceObject)));this.checkExistKeyBoth=(sourceObject,referenceObject)=>{const removedItems={};const remainingItems={};for(const key in sourceObject){if(Object.prototype.hasOwnProperty.call(referenceObject,key)){remainingItems[key]=sourceObject[key]}else{removedItems[key]=sourceObject[key]}}return{removedItems:removedItems,remainingItems:remainingItems}};this.filterExclusions=(fileTree,exclusions)=>{const{extensions:extensions=[],directories:directories=[],markers:markers=[]}=this.plugin.settings.exclusions;let filtered={};const directoriesMod=[...directories];if(this.plugin.mobile){if(this.plugin.settings.skipHiddenMobile){directoriesMod.push(".obsidian")}}else{if(this.plugin.settings.skipHiddenDesktop){directoriesMod.push(".obsidian")}}if(this.plugin.settings.exclusionsOverride){filtered={...fileTree}}else{for(const filePath in fileTree){const folders=filePath.split("/");if(!filePath.endsWith("/")){folders.pop()}if(folders.some((folder=>directoriesMod.includes(folder)))){continue}const extension=extname(filePath).toLowerCase();if(extensions.includes(extension)){continue}if(markers.some((marker=>filePath.includes(marker)))){continue}filtered[filePath]=fileTree[filePath]}}return filtered};this.compareFileTrees=async(webdavFiles,localFiles,prevFileTree,exclusions)=>{let webdavMatch,localMatch;if(prevFileTree.files&&Object.keys(prevFileTree.files).length>0&&Object.keys(webdavFiles).length>0){try{prevFileTree.files=this.filterExclusions(prevFileTree.files,exclusions);log("PREV",prevFileTree);log("WEBD",webdavFiles);log("LOC",localFiles);const webdavFilesBranch=await this.comparePreviousFileTree(prevFileTree,webdavFiles);log("webdavFilesBranch",webdavFilesBranch);const localFilesBranch=await this.comparePreviousFileTree(prevFileTree,localFiles);log("localFilesBranch",localFilesBranch);({webdavMatch:webdavMatch,localMatch:localMatch}=this.compareFileTreesExcept(webdavFilesBranch,localFilesBranch))}catch(error){console.error("CHECKSU; ERROR, ",error);return error}webdavMatch.deleted=this.checkExistKey(webdavMatch.deleted,localFiles);localMatch.deleted=this.checkExistKey(localMatch.deleted,webdavFiles)}else{console.log("++ NO PREVIOUS fileTree loaded! ++");if(Object.keys(webdavFiles).length===0){console.log("No Webdav files found!");webdavMatch={added:{},deleted:{},modified:{},except:{}};localMatch={added:localFiles,deleted:{},modified:{},except:{}}}else{console.log("Webdav files found");const webdavFilesBranch={added:webdavFiles,deleted:{},modified:{},except:{}};console.log("Webdav files found",webdavFilesBranch);const localFilesBranch={added:localFiles,deleted:{},modified:{},except:{}};({webdavMatch:webdavMatch,localMatch:localMatch}=this.compareFileTreesExcept(webdavFilesBranch,localFilesBranch))}}return{webdavFiles:webdavMatch,localFiles:localMatch}};this.plugin=plugin}compareFileTreesExcept(webdavFiles,localFiles){for(const file1 in webdavFiles.modified){if(localFiles.modified[file1]){webdavFiles.except[file1]=webdavFiles.modified[file1];localFiles.except[file1]=localFiles.modified[file1];delete webdavFiles.modified[file1];delete localFiles.modified[file1]}}for(const file1 in webdavFiles.added){if(localFiles.added[file1]===webdavFiles.added[file1]){delete webdavFiles.added[file1];delete localFiles.added[file1]}else if(localFiles.added[file1]){webdavFiles.except[file1]=webdavFiles.added[file1];localFiles.except[file1]=localFiles.added[file1];delete webdavFiles.added[file1];delete localFiles.added[file1]}}for(const file1 in localFiles.except){if(localFiles.except[file1]===webdavFiles.except[file1]){delete webdavFiles.except[file1];delete localFiles.except[file1]}else{}}return{webdavMatch:webdavFiles,localMatch:localFiles}}async comparePreviousFileTree(previousObj,current){const previous=previousObj.files;const{removedItems:removedItems,remainingItems:remainingItems}=this.checkExistKeyBoth(current,previousObj.except);const added={};const deleted={};const modified={};const except=remainingItems;current=removedItems;for(const[currentFile,currentHash]of Object.entries(current)){const matchingHash=previous[currentFile];if(previous[currentFile]===current[currentFile]){}else if(!matchingHash){added[currentFile]=currentHash}else if(matchingHash!==currentHash){modified[currentFile]=currentHash}}for(const[file,hash]of Object.entries(previous)){if(!current.hasOwnProperty(file)){deleted[file]=previous[file];log("HAAAA ",file)}}return{added:added,deleted:deleted,modified:modified,except:except}}};var import_obsidian3=require("obsidian");var Checksum=class{constructor(plugin){this.plugin=plugin;this.localFiles={};this.generateLocalHashTree=async exclude=>{this.localFiles={};const localTFiles=this.plugin.app.vault.getAllLoadedFiles();await Promise.all(localTFiles.map((async element=>{try{if(element instanceof import_obsidian3.TFile){const filePath=element.path;if(exclude&&this.isExcluded(filePath)){return}const content=await this.plugin.app.vault.readBinary(element);this.localFiles[filePath]=await sha1(content)}else if(element instanceof import_obsidian3.TFolder){const filePath=element.path+"/";if(exclude&&this.isExcluded(filePath)||filePath==="//"){return}this.localFiles[filePath]=""}else{console.error("NEITHER FILE NOR FOLDER? ",element)}}catch(error){console.error("localTFiles Errororr",element,error)}})));const configDir=this.plugin.app.vault.configDir;this.localFiles[configDir+"/"]="";await this.getHiddenLocalFiles(configDir,exclude);if(exclude){this.plugin.localFiles=this.localFiles}return this.localFiles};this.generateWebdavHashTree=async(webdavClient,rootFolder,exclusions)=>{try{const exists=await webdavClient.exists(rootFolder);if(exists){log("ROOTFOLDER DOES EXIST")}else{log("DOES NOT EXIST");await webdavClient.createDirectory(rootFolder)}}catch(error){console.error("ERROR: generatessWebdavHashTree",error)}try{const contents=await webdavClient.getDirectory(rootFolder,"infinity");const refinedResult=this.refineObject(contents,exclusions);const webdavHashtree=this.removeBase(refinedResult,rootFolder);log("webdav: ",webdavHashtree);this.plugin.webdavFiles=webdavHashtree;return webdavHashtree}catch(error){console.error("Error:",error);return error}};this.plugin=plugin}refineObject(data,exclusions){const refinedObject={};data.forEach((item=>{const{filename:filename,props:props}=item;if(this.isExcluded(filename)){return}if(props&&props.checksum){const checksum=props.checksum;refinedObject[filename]=checksum}else{refinedObject[filename]=""}}));return refinedObject}isExcluded(filePath){const{extensions:extensions,directories:directories,markers:markers}=this.plugin.settings.exclusions;const directoriesMod=[...directories];if(this.plugin.mobile){if(this.plugin.settings.skipHiddenMobile){directoriesMod.push(this.plugin.app.vault.configDir)}}else{if(this.plugin.settings.skipHiddenDesktop){directoriesMod.push(this.plugin.app.vault.configDir)}}if(this.plugin.settings.exclusionsOverride){return false}const folders=filePath.split("/");if(!filePath.endsWith("/")){folders.pop()}if(folders.some((folder=>directoriesMod.includes(folder)))){return true}const extension=extname(filePath).toLowerCase();if(extensions.includes(extension)){return true}if(markers.some((marker=>filePath.includes(marker)))){return true}return false}removeBase(fileChecksums,basePath){const removedBase={};for(const[filePath,checksum]of Object.entries(fileChecksums)){if(filePath.startsWith(basePath)){const relativePath=filePath.substring(basePath.length).replace(/^\//,"");removedBase[relativePath]=checksum}else{removedBase[filePath]=checksum}}return removedBase}async getHiddenLocalFiles(path,exclude=true,concurrency=15){const{files:files,folders:folders}=await this.plugin.app.vault.adapter.list(path);const processConcurrently=async(items,worker,limit)=>{for(let i=0;i<items.length;i+=limit){const chunk=items.slice(i,i+limit);await Promise.all(chunk.map(worker))}};const processFile=async file=>{try{if(exclude&&this.isExcluded(file)){return}const data=await this.plugin.app.vault.adapter.readBinary(file);this.localFiles[file]=await sha1(data)}catch(error){console.error(`Error processing file ${file}:`,error)}};const processFolder=async folder=>{const folderPath=`${folder}/`;if(exclude&&this.isExcluded(folderPath)){return}try{this.localFiles[folderPath]="";await this.getHiddenLocalFiles((0,import_obsidian3.normalizePath)(folder),exclude,concurrency)}catch(error){console.error(`Error processing folder ${folder}:`,error)}};await Promise.all([processConcurrently(files,processFile,concurrency),processConcurrently(folders,processFolder,concurrency)])}};var import_xmldom=__toESM(require_dom_parser());var import_obsidian4=require("obsidian");var WebDAVClient=class{constructor(baseUrl,options){this.baseUrl=baseUrl.endsWith("/")?baseUrl.slice(0,-1):baseUrl;this.username=options.username;this.password=options.password;this.headers=options.headers}createAuthHeader(){if(typeof btoa==="undefined"){throw new Error("btoa is not available in this environment")}return`Basic ${btoa(`${this.username}:${this.password}`)}`}createFullUrl(path){const cleanPath=path.startsWith("/")?path:`/${path}`;return`${this.baseUrl}${cleanPath}`}parseFileProps(xmlString){var _a,_b,_c,_d,_e;const parser=new import_xmldom.DOMParser;const doc=parser.parseFromString(xmlString,"text/xml");return{href:((_a=doc.getElementsByTagNameNS("DAV:","href")[0])==null?void 0:_a.textContent)||"",lastModified:((_b=doc.getElementsByTagNameNS("DAV:","getlastmodified")[0])==null?void 0:_b.textContent)||"",contentLength:((_c=doc.getElementsByTagNameNS("DAV:","getcontentlength")[0])==null?void 0:_c.textContent)||"",checksum:((_d=doc.getElementsByTagNameNS("DAV:","checksum")[0])==null?void 0:_d.textContent)||"",displayName:((_e=doc.getElementsByTagNameNS("DAV:","displayname")[0])==null?void 0:_e.textContent)||""}}async get(path){const response=await(0,import_obsidian4.requestUrl)({url:this.createFullUrl(path),method:"GET",headers:{Authorization:this.createAuthHeader()}});return{data:response.arrayBuffer,status:response.status}}async propfind(path,depth="1"){return await(0,import_obsidian4.requestUrl)({url:this.createFullUrl(path),method:"PROPFIND",headers:{Authorization:this.createAuthHeader(),Depth:depth||"0","Content-Type":"application/xml"},body:`<?xml version="1.0" encoding="utf-8" ?>\n                <propfind xmlns="DAV:">\n                    <allprop/>\n                </propfind>`})}async exists(path){try{const response=await this.propfind(path,"0");return response.status===207}catch(error){if(error.status===404){return false}return false}}async put(path,content){const response=await(0,import_obsidian4.requestUrl)({url:this.createFullUrl(path),method:"PUT",headers:{Authorization:this.createAuthHeader(),"Content-Type":content instanceof ArrayBuffer?"application/octet-stream":"text/plain"},body:content});return response.status===201}async delete(path){try{const response=await(0,import_obsidian4.requestUrl)({url:this.createFullUrl(path),method:"DELETE",headers:{Authorization:this.createAuthHeader()}});return response.status}catch(error){return error.status||666}}async move(sourcePath,destinationPath,overwrite=true){return await(0,import_obsidian4.requestUrl)({url:this.createFullUrl(sourcePath),method:"MOVE",headers:{Authorization:this.createAuthHeader(),Destination:this.createFullUrl(destinationPath),Overwrite:overwrite?"T":"F"}})}async copy(sourcePath,destinationPath,overwrite=true){return await(0,import_obsidian4.requestUrl)({url:this.createFullUrl(sourcePath),method:"COPY",headers:{Authorization:this.createAuthHeader(),Destination:this.createFullUrl(destinationPath),Overwrite:overwrite?"T":"F"}})}async mkcol(path){return await(0,import_obsidian4.requestUrl)({url:this.createFullUrl(path),method:"MKCOL",headers:{Authorization:this.createAuthHeader()}})}async createDirectory(path){const response=await this.mkcol(path);return response.status===201}async getDirectory(path="/",depth="1"){var _a,_b,_c,_d,_e,_f,_g,_h,_i,_j,_k,_l,_m,_n,_o;const response=await this.propfind(path,depth);const parser=new import_xmldom.DOMParser;const doc=parser.parseFromString(response.text,"text/xml");const responses=doc.getElementsByTagNameNS("DAV:","response");const items=[];const firstHref=((_b=(_a=responses[0])==null?void 0:_a.getElementsByTagNameNS("DAV:","href")[0])==null?void 0:_b.textContent)||"";const basePath=firstHref.split("/").slice(0,-1).join("/");for(let i=0;i<responses.length;i++){const response2=responses[i];const prop=response2.getElementsByTagNameNS("DAV:","prop")[0];const href=((_c=response2.getElementsByTagNameNS("DAV:","href")[0])==null?void 0:_c.textContent)||"";let relativePath=href.replace(basePath,"");relativePath=relativePath.replace(/^\/+/,"").replace(/\/+/g,"/");if(!relativePath||relativePath==="/"){continue}const resourcetype=prop.getElementsByTagNameNS("DAV:","resourcetype")[0];const isCollection=(resourcetype==null?void 0:resourcetype.getElementsByTagNameNS("DAV:","collection").length)>0;let finalPath=isCollection?`${relativePath}/`:relativePath;finalPath=finalPath.replace(/^\/+/,"").replace(/\/+/g,"/");const item={basename:decodeURIComponent(relativePath.split("/").filter(Boolean).pop()||""),etag:((_e=(_d=prop.getElementsByTagNameNS("DAV:","getetag")[0])==null?void 0:_d.textContent)==null?void 0:_e.replace(/"/g,""))||null,filename:decodeURIComponent(finalPath),lastmod:((_f=prop.getElementsByTagNameNS("DAV:","getlastmodified")[0])==null?void 0:_f.textContent)||"",mime:((_g=prop.getElementsByTagNameNS("DAV:","getcontenttype")[0])==null?void 0:_g.textContent)||"",props:{checksum:((_h=prop.getElementsByTagNameNS("DAV:","checksum")[0])==null?void 0:_h.textContent)||"",displayname:((_i=prop.getElementsByTagNameNS("DAV:","displayname")[0])==null?void 0:_i.textContent)||"",getlastmodified:((_j=prop.getElementsByTagNameNS("DAV:","getlastmodified")[0])==null?void 0:_j.textContent)||"",resourcetype:isCollection?{collection:""}:""},size:parseInt(((_k=prop.getElementsByTagNameNS("DAV:","getcontentlength")[0])==null?void 0:_k.textContent)||"0",10),type:isCollection?"directory":"file"};const contentLength=(_l=prop.getElementsByTagNameNS("DAV:","getcontentlength")[0])==null?void 0:_l.textContent;if(contentLength){item.props.getcontentlength=parseInt(contentLength,10)}const contentType=(_m=prop.getElementsByTagNameNS("DAV:","getcontenttype")[0])==null?void 0:_m.textContent;if(contentType){item.props.getcontenttype=contentType}const etag=(_n=prop.getElementsByTagNameNS("DAV:","getetag")[0])==null?void 0:_n.textContent;if(etag){item.props.getetag=etag.replace(/"/g,"")}const checksums=prop.getElementsByTagNameNS("http://owncloud.org/ns","checksums")[0];if(checksums){item.props.checksums={checksum:((_o=checksums.getElementsByTagNameNS("http://owncloud.org/ns","checksum")[0])==null?void 0:_o.textContent)||""}}items.push(item)}return items}};var import_obsidian5=require("obsidian");var WEBDAV_HEADERS={"Cache-Control":"no-cache, no-store, must-revalidate"};var Operations=class{constructor(plugin){this.plugin=plugin;this.plugin=plugin}configWebdav(url,username,password){if(!(url&&username&&password)){throw new Error("Missing WebDAV configuration parameters")}return new WebDAVClient(url,{username:username,password:password,headers:WEBDAV_HEADERS})}async downloadFiles(webdavClient,filesMap,remoteBasePath){if(!filesMap||Object.keys(filesMap).length===0){log("No files to download");return}await Promise.all(Object.entries(filesMap).map((([filePath,_])=>this.downloadFile(webdavClient,filePath,remoteBasePath))))}async downloadFile(webdavClient,filePath,remoteBasePath){try{if(filePath.endsWith("/")){await this.ensureLocalDirectory(filePath);return}const remotePath=join(remoteBasePath,filePath);const remoteStats=await webdavClient.exists(remotePath);if(!remoteStats){console.error(`Remote file not found: ${remotePath}`);return}await this.ensureLocalDirectory(dirname(filePath));const fileData=await this.downloadWithRetry(webdavClient,remotePath);if(fileData.status!==200){throw new Error(`Failed to download ${remotePath}: ${fileData.status}`)}await this.plugin.app.vault.adapter.writeBinary(filePath,fileData.data);this.plugin.processed()}catch(error){console.error(`Error downloading ${filePath}:`,error)}}async uploadFiles(webdavClient,fileChecksums,remoteBasePath){if(!fileChecksums||Object.keys(fileChecksums).length===0){log("No files to upload");return}for(const[localFilePath,_]of Object.entries(fileChecksums)){await this.uploadFile(webdavClient,localFilePath,remoteBasePath)}console.log("Upload completed")}async uploadFile(webdavClient,localFilePath,remoteBasePath){try{if(localFilePath.endsWith("/")){await this.ensureRemoteDirectory(webdavClient,localFilePath,remoteBasePath);return}const fileContent=await this.plugin.app.vault.adapter.readBinary((0,import_obsidian5.normalizePath)(localFilePath));const remoteFilePath=join(remoteBasePath,localFilePath);await webdavClient.put(remoteFilePath,fileContent);this.plugin.processed();log(`Uploaded: ${localFilePath} to ${remoteFilePath}`)}catch(error){console.error(`Error uploading ${localFilePath}:`,error)}}async deleteFilesWebdav(client,basePath,fileTree){if(!fileTree||Object.keys(fileTree).length===0){log("No files to delete on WebDAV");return}const failedPaths=[];const deleteFile=async path=>{const cleanPath=path.endsWith("/")?path.replace(/\/$/,""):path;const fullPath=join(basePath,cleanPath);try{const response=await client.delete(fullPath);if(response!==204&&response!==404){console.log(fullPath," Errorstatus: ",response);failedPaths.push(fullPath);return}this.plugin.processed()}catch(error){console.error(`Delete failed for ${cleanPath}:`,error);failedPaths.push(fullPath)}};const retryDelete=async path=>{try{if(await client.exists(path)){const response=await client.delete(path);if(response){this.plugin.processed();console.log(`Retry successful: ${path}`)}}else{console.log(`File already deleted or doesn't exist: ${path}`);this.plugin.processed()}}catch(error){console.error(`Final delete attempt failed for ${path}:`,error)}};await Promise.all(Object.keys(fileTree).map(deleteFile));if(failedPaths.length>0){console.log(`Retrying ${failedPaths.length} failed deletions...`);await Promise.all(failedPaths.map(retryDelete))}}async deleteFilesLocal(fileTree){if(!fileTree||Object.keys(fileTree).length===0){log("No files to delete locally");return}for(const file of Object.keys(fileTree)){await this.deleteLocalFile(file)}}async downloadWithRetry(webdavClient,remotePath,maxRetries=2){for(let attempt=1;attempt<=maxRetries;attempt++){try{return await webdavClient.get(remotePath)}catch(error){if(attempt===maxRetries)throw error;console.log(`Retry ${attempt} for ${remotePath}`);await new Promise((resolve=>setTimeout(resolve,100)))}}throw new Error(`Failed to download after ${maxRetries} attempts`)}async ensureLocalDirectory(path){const exists=await this.plugin.app.vault.adapter.exists(path);if(!exists){console.log(`Creating local directory: ${path}`);await this.plugin.app.vault.createFolder(path)}}async ensureRemoteDirectory(webdavClient,path,basePath){try{console.log(`Creating remote directory: ${path}`);const response=await webdavClient.createDirectory(join(basePath,path.replace(/\/$/,"")));if(!response){throw new Error(`Failed to create remote directory ${path}`)}this.plugin.processed()}catch(error){console.error(`Error creating remote directory ${path}:`,error)}}async deleteLocalFile(file){try{if(this.plugin.mobile){await this.plugin.app.vault.adapter.trashLocal(file)}else{await this.plugin.app.vault.adapter.trashSystem(file)}this.plugin.processed()}catch(error){console.error(`Error deleting local file ${file}:`,error)}}async test(show=true,force=false){try{const existBool=await this.plugin.webdavClient.exists(this.plugin.settings.webdavPath);log("EXISTS: ",existBool);if(existBool){show&&this.plugin.show("Connection successful");show&&this.plugin.setStatus("✔️");return true}show&&this.plugin.show("Connection failed");this.plugin.setStatus("📶");return false}catch(error){show&&this.plugin.show(`WebDAV connection test failed. Error: ${error}`);console.log("Failed miserably");this.plugin.setStatus("❌");this.plugin.setError(true);return false}}async check(show=true,force=false){if(!force&&this.plugin.status!=="✔️"&&this.plugin.status!=="📶"){show&&this.plugin.show(`Checking not possible, currently ${this.plugin.status}`);return}this.plugin.setStatus("🔎");show&&this.plugin.show(`${"🔎"} Checking ...`);let response;try{response=await this.test(false,true);if(!response){log("Testing failed, can't continue Check action!");return false}this.plugin.checkTime=Date.now();const webdavPromise=this.plugin.checksum.generateWebdavHashTree(this.plugin.webdavClient,this.plugin.baseWebdav,this.plugin.settings.exclusions);const localPromise=this.plugin.checksum.generateLocalHashTree(true);const[webdavFiles,localFiles]=await Promise.all([webdavPromise,localPromise]);log("WEBDAV:",webdavFiles);log("LOCAL",JSON.stringify(localFiles,null,2));const comparedFileTrees=await this.plugin.compare.compareFileTrees(webdavFiles,localFiles,this.plugin.prevData,this.plugin.settings.exclusions);log(JSON.stringify(comparedFileTrees,null,2));this.plugin.fileTrees=comparedFileTrees;this.plugin.checkTime=Date.now();show&&(fileTreesEmpty(this.plugin.fileTrees)?null:this.plugin.show("Finished checking files"));this.plugin.setStatus("✔️");return true}catch(error){console.error("CHECK ERROR: ",error);show&&this.plugin.show("CHECK ERROR: "+error);this.plugin.setError(true);response?this.plugin.setStatus("❌"):this.plugin.setStatus("📶");throw error}}async sync(controller,show=true){if(this.plugin.prevData.error){const action="sync";if(this.plugin.force!==action){this.plugin.setForce(action);show&&this.plugin.show("Error detected - please clear in control panel or force action by retriggering "+action);return}}try{if(!await this.test(false)){show&&this.plugin.show("Connection Problem detected!");return}if(this.plugin.status!=="✔️"){show&&this.plugin.show(`Operation not possible, currently working on '${this.plugin.status}'`);return}if(!this.plugin.fileTrees){show&&this.plugin.show("Checking files before operation...");const response=await this.check(show);console.log("SYNC CHECK FAIL CORRECT");if(!response){return}}this.plugin.setStatus("⏳");const operationsToCount=[];if(controller.webdav){if(controller.webdav.added)operationsToCount.push(this.plugin.fileTrees.webdavFiles.added);if(controller.webdav.modified)operationsToCount.push(this.plugin.fileTrees.webdavFiles.modified);if(controller.webdav.deleted)operationsToCount.push(this.plugin.fileTrees.webdavFiles.deleted);if(controller.webdav.except)operationsToCount.push(this.plugin.fileTrees.webdavFiles.except)}if(controller.local){if(controller.local.added)operationsToCount.push(this.plugin.fileTrees.localFiles.added);if(controller.local.modified)operationsToCount.push(this.plugin.fileTrees.localFiles.modified);if(controller.local.deleted)operationsToCount.push(this.plugin.fileTrees.localFiles.deleted);if(controller.local.except)operationsToCount.push(this.plugin.fileTrees.localFiles.except)}const total=this.plugin.calcTotal(...operationsToCount.filter(Boolean));if(total===0){show&&this.plugin.show("No files to sync");this.plugin.setStatus("✔️");return}this.plugin.statusBar2.setText(" 0/"+this.plugin.loadingTotal);show&&this.plugin.show("Synchronizing...");const operations=[];if(controller.webdav){if(controller.webdav.added===1){operations.push(this.plugin.operations.downloadFiles(this.plugin.webdavClient,this.plugin.fileTrees.webdavFiles.added,this.plugin.baseWebdav))}else if(controller.webdav.added===-1){operations.push(this.plugin.operations.deleteFilesWebdav(this.plugin.webdavClient,this.plugin.baseWebdav,this.plugin.fileTrees.webdavFiles.added))}if(controller.webdav.deleted===1){operations.push(this.plugin.operations.deleteFilesLocal(this.plugin.fileTrees.webdavFiles.deleted))}else if(controller.webdav.deleted===-1){operations.push(this.plugin.operations.downloadFiles(this.plugin.webdavClient,this.plugin.fileTrees.webdavFiles.deleted,this.plugin.baseWebdav))}if(controller.webdav.modified===1){operations.push(this.plugin.operations.downloadFiles(this.plugin.webdavClient,this.plugin.fileTrees.webdavFiles.modified,this.plugin.baseWebdav))}if(controller.webdav.except===1){operations.push(this.plugin.operations.downloadFiles(this.plugin.webdavClient,this.plugin.fileTrees.webdavFiles.except,this.plugin.baseWebdav))}}if(controller.local){if(controller.local.added===1){operations.push(this.plugin.operations.uploadFiles(this.plugin.webdavClient,this.plugin.fileTrees.localFiles.added,this.plugin.baseWebdav))}else if(controller.local.added===-1){operations.push(this.plugin.operations.deleteFilesLocal(this.plugin.fileTrees.localFiles.added))}if(controller.local.deleted===1){operations.push(this.plugin.operations.deleteFilesWebdav(this.plugin.webdavClient,this.plugin.baseWebdav,this.plugin.fileTrees.localFiles.deleted))}else if(controller.local.deleted===-1){operations.push(this.plugin.operations.uploadFiles(this.plugin.webdavClient,this.plugin.fileTrees.localFiles.deleted,this.plugin.baseWebdav))}if(controller.local.modified===1){operations.push(this.plugin.operations.uploadFiles(this.plugin.webdavClient,this.plugin.fileTrees.localFiles.modified,this.plugin.baseWebdav))}if(controller.local.except===1){operations.push(this.plugin.operations.uploadFiles(this.plugin.webdavClient,this.plugin.fileTrees.localFiles.except,this.plugin.baseWebdav))}}await Promise.all(operations);show&&this.plugin.show("Sync completed - checking again");await this.check(true,true);await this.plugin.saveState();show&&this.plugin.show("Done");this.plugin.setStatus("✔️")}catch(error){console.error("SYNC",error);show&&this.plugin.show("SYNC Error: "+error);this.plugin.setError(true);this.plugin.setStatus("❌")}finally{this.plugin.finished()}}};var import_obsidian6=require("obsidian");async function launcher(plugin){await plugin.loadSettings();plugin.addSettingTab(new CloudrSettingsTab(plugin.app,plugin));plugin.compare=new Compare(plugin);plugin.checksum=new Checksum(plugin);plugin.operations=new Operations(plugin);plugin.mobile=import_obsidian6.Platform.isMobileApp;plugin.connectionError=false;plugin.testVal=false;plugin.settings.exclusionsOverride=false;plugin.setBaseWebdav();plugin.prevPath=`${plugin.app.vault.configDir}/plugins/webdav/prevdata.json`;if(plugin.settings.enableRibbons){plugin.addRibbonIcon("upload-cloud","PUSH to Webdav",(()=>{plugin.operations.sync({local:{added:1,deleted:1,modified:1,except:1},webdav:{}})}));plugin.addRibbonIcon("download-cloud","PULL from Webdav",(()=>{plugin.operations.sync({local:{},webdav:{added:1,deleted:1,modified:1,except:1}})}))}plugin.addRibbonIcon("arrow-down-up","SYNC with Webdav",(()=>{plugin.operations.sync({local:{added:1,deleted:1,modified:1},webdav:{added:1,deleted:1,modified:1}})}));plugin.addRibbonIcon("settings-2","Open WebDav Control Panel",(()=>{plugin.displayModal()}));try{plugin.prevData=JSON.parse(await plugin.app.vault.adapter.read(plugin.prevPath));log("PREVDATA LOADED: ",plugin.prevData)}catch(e){plugin.prevData={error:true,files:{},date:Date.now(),except:{}};plugin.app.vault.adapter.write(plugin.prevPath,JSON.stringify(plugin.prevData,null,2));console.error("ERROR LOADING PREVIOUS DATA! RESET prevdata.json to {error: true, files: {}} ");plugin.show("Failed to read previous data\nThis is to be expected if the plugin is new")}plugin.statusBar=plugin.addStatusBarItem();plugin.statusBar2=plugin.addStatusBarItem();plugin.statusBar2.setText("");plugin.loadingTotal=-1;plugin.statusBar.style.display="flex";plugin.statusBar.style.width="25px";plugin.statusBar.style.color="green";plugin.statusBar.classList.add("status-bar-item");plugin.statusBar.classList.add("mod-clickable");plugin.statusBar.addEventListener("click",(()=>{if(plugin.app.lastEvent&&plugin.app.lastEvent.ctrlKey){console.log("TTTTTTTTTTTTTTTTT")}else{plugin.displayModal()}}));plugin.addCommand({id:"display-modal",name:"Display modal",callback:async()=>{plugin.displayModal()}});plugin.addCommand({id:"push",name:"Force PUSH all File changes",callback:async()=>{plugin.operations.sync({local:{added:1,deleted:1,modified:1,except:1},webdav:{}})}});plugin.addCommand({id:"pull",name:"Force PULL all File changes",callback:async()=>{plugin.operations.sync({local:{},webdav:{added:1,deleted:1,modified:1,except:1}})}});plugin.addCommand({id:"webdav-fullsync",name:"Full Sync",callback:async()=>{plugin.operations.sync({local:{added:1,deleted:1,modified:1},webdav:{added:1,deleted:1,modified:1}})}});plugin.addCommand({id:"save-prev",name:"Save State",callback:async()=>{plugin.saveState()}});plugin.addCommand({id:"reset-error",name:"Reset Error state",callback:async()=>{plugin.setError(false)}});plugin.addCommand({id:"delete-local",name:"Delete pending local files",callback:()=>{plugin.operations.deleteFilesLocal(plugin.fileTrees.webdavFiles.deleted)}});plugin.addCommand({id:"delete-webdav",name:"Delete pending webdav files",callback:()=>{plugin.operations.deleteFilesWebdav(plugin.webdavClient,plugin.baseWebdav,plugin.fileTrees.localFiles.deleted)}});plugin.addCommand({id:"toggle-pause-all",name:"Toggle Pause for all activities",callback:()=>{plugin.togglePause()}});plugin.setStatus("✔️");plugin.setClient();if(plugin.settings.liveSync){plugin.setLiveSync()}if(plugin.settings.autoSync){plugin.setAutoSync()}}var Cloudr=class extends import_obsidian7.Plugin{constructor(){super(...arguments);this.liveSyncTimeouts={}}onload(){launcher(this)}async setClient(){try{this.webdavClient=this.operations.configWebdav(this.settings.url,this.settings.username,this.settings.password)}catch(error){console.error("Webdav Client creation error.",error);this.show("Error creating Webdav Client!");this.prevData}}async setBaseWebdav(){if(this.settings.overrideVault){this.baseWebdav=join(this.settings.webdavPath,this.settings.overrideVault).replace(/\\/g,"/")}else{this.baseWebdav=join(this.settings.webdavPath,this.app.vault.getName()).replace(/\\/g,"/")}log("Base webdav: ",this.baseWebdav)}async setAutoSync(){window.clearInterval(this.intervalId);if(this.settings.autoSync){this.intervalId=window.setInterval((async()=>{log("AUTOSYNC INTERVAL TRIGGERED");if(!await this.operations.check(false)){return}await this.operations.sync({local:{added:1,deleted:1,modified:1},webdav:{added:1,deleted:1,modified:1}},false)}),this.settings.autoSyncInterval*1e3)}}async renewLiveSyncTimeout(abstractFile){const filePath=abstractFile.path;const timeoutId=this.liveSyncTimeouts[filePath];if(timeoutId){clearTimeout(timeoutId);delete this.liveSyncTimeouts[filePath]}this.liveSyncTimeouts[filePath]=setTimeout((()=>{log("10 seconds have passed");this.liveSyncCallback(abstractFile)}),1e4)}async liveSyncCallback(abstractFile){console.log("liveSync outer");if(abstractFile instanceof import_obsidian7.TFile){if(this.status==="✔️"){if(this.connectionError===false){if(Date.now()-this.lastLiveSync<5e3){this.renewLiveSyncTimeout(abstractFile);return}}else{console.log(Date.now()-this.lastLiveSync);if(Date.now()-this.lastLiveSync<2e4){return}}this.lastLiveSync=Date.now();this.setStatus("⏳");try{const file=abstractFile;const filePath=file.path;const timeoutId=this.liveSyncTimeouts[filePath];if(timeoutId){clearTimeout(timeoutId);delete this.liveSyncTimeouts[filePath]}if(this.fileTrees&&this.fileTrees.localFiles&&this.fileTrees.localFiles.except&&this.fileTrees.localFiles.except.hasOwnProperty(filePath)||this.prevData.except&&this.prevData.except.hasOwnProperty(filePath)){console.log("File is an exception!");this.show("File "+filePath+" is an exception file!");return}console.log(filePath);const data=await this.app.vault.readBinary(file);const hash=await sha1(data);const remoteFilePath=join(this.baseWebdav,filePath);await this.webdavClient.put(remoteFilePath,data);this.prevData.files[filePath]=hash;this.savePrevData();this.setStatus("✔️");this.connectionError=false}catch(error){console.log("LiveSync Connectivity ERROR!");this.show("LiveSync Error");this.connectionError=true;this.lastLiveSync=Date.now();this.setStatus("❌")}}else{this.renewLiveSyncTimeout(abstractFile)}}}setLiveSync(){if(this.settings.liveSync){this.registerEvent(this.app.vault.on("modify",(file=>{this.liveSyncCallback(file)})))}else{this.app.vault.off("modify",(file=>{if(file instanceof import_obsidian7.TAbstractFile||file instanceof import_obsidian7.TFile){this.liveSyncCallback(file)}}))}}async errorWrite(){this.setError(true);this.app.vault.adapter.write(this.prevPath,JSON.stringify(this.prevData,null,2))}async setError(error){this.prevData.error=error;if(error){this.setStatus("❌")}this.app.vault.adapter.write(this.prevPath,JSON.stringify(this.prevData,null,2))}async saveState(check=false){log("save state");const action="save";if(this.prevData.error){if(this.force!==action){this.setForce(action);this.show("Error detected - please clear in control panel or force action by retriggering "+action);return}}if(this.status==="✔️"&&!this.prevData.error){this.setStatus("💾");try{this.prevData.files=await this.checksum.generateLocalHashTree(false);this.prevData={date:Date.now(),error:this.prevData.error,files:this.prevData.files,except:this.fileTrees.localFiles.except};await this.app.vault.adapter.write(this.prevPath,JSON.stringify(this.prevData,null,2));console.log("saving successful!");this.show("Saved current vault state!")}catch(error){console.log("Error occurred while saving State. ",error);console.error("SAVESTATE",error);this.setError(true);return error}finally{this.setStatus("✔️")}}else{this.show(`Saving not possible because of ${this.status} \nplease clear Error in Control Panel`);console.log("Action currently active: ",this.status,"\nCan't save right now!")}}async savePrevData(){try{await this.app.vault.adapter.write(this.prevPath,JSON.stringify(this.prevData,null,2));console.log("saving prevData successful!")}catch(error){console.error("prevData   ",error)}}async initRemote(){await this.operations.deleteFilesWebdav(this.webdavClient,this.baseWebdav,this.webdavFiles);await this.operations.uploadFiles(this.webdavClient,this.localFiles,this.baseWebdav)}calcTotal(...rest){log("REST: ",rest);this.loadingProcessed=0;let total=0;for(const i of rest){total+=Object.keys(i).length}this.loadingTotal=total;return total}async finished(){await sleep(2e3);this.statusBar2.setText("")}async setStatus(status,show=true,text){this.status=status;if(text){this.statusBar.setText(text);return}if(this.connectionError){this.statusBar.setText("📶");this.statusBar.style.color="red";return}show&&this.statusBar.setText(status)}async processed(){this.loadingProcessed++;log(this.loadingProcessed.toString()+"/"+this.loadingTotal);this.statusBar2.setText(this.loadingProcessed.toString()+"/"+this.loadingTotal)}async setForce(action){this.force=action}togglePause(){this.pause=!this.pause;console.log(this.status);if(this.pause){this.setStatus("⏸️")}else{this.setStatus("✔️")}}async displayModal(){this.modal=new FileTreeModal(this.app,this);this.modal.open();if(!this.fileTrees){const response=await this.operations.check();if(response){this.modal.fileTreeDiv.setText(JSON.stringify(this.fileTrees,null,2))}else{this.modal.fileTreeDiv.setText("Checking failed!")}}}show(message="Alert!",duration){if(this.notice){this.notice.hide()}const fragment=document.createDocumentFragment();const divElement=document.createElement("div");divElement.textContent=message;divElement.style.whiteSpace="pre-wrap";fragment.appendChild(divElement);this.notice=new import_obsidian7.Notice(fragment,duration)}onunload(){window.clearInterval(this.intervalId)}async loadSettings(){this.settings=Object.assign({},DEFAULT_SETTINGS,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};